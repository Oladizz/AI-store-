rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin.
    // This assumes you have a 'roles' field in your user documents.
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(['admin']);
    }

    // Users Collection
    // - Anyone can create a user document (for signup).
    // - Users can only read/update their own document.
    // - Admins can read/write any user document.
    match /users/{userId} {
      allow create;
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow delete: if isAdmin();
    }

    // Products Collection
    // - Anyone can read products.
    // - Only admins can create, update, or delete products.
    match /products/{productId} {
      allow read;
      allow write: if isAdmin();
    }

    // Categories Collection
    // - Anyone can read categories.
    // - Only admins can create, update, or delete categories.
    match /categories/{categoryId} {
        allow read;
        allow write: if isAdmin();
    }

    // Orders Collection
    // - Users can create their own orders.
    // - Users can only read their own orders.
    // - Admins can read all orders.
    // - Nobody can update or delete orders for data integrity.
    match /orders/{orderId} {
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update, delete: if false; // Or if isAdmin() for specific cases
    }

    // Content Collection (for homepage layout, text, etc.)
    // - Anyone can read the content.
    // - Only admins can update the content.
    match /content/{documentId} {
      allow read;
      allow write: if isAdmin();
    }
  }
}
